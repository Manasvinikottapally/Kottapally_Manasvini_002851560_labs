/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.VitalSigns;
import model.VitalSignsHistory;

/**
 *
 * @author manasvini
 */
public class ViewPanel extends javax.swing.JPanel {
    VitalSignsHistory VitalSignsHistory;

    /**
     * Creates new form ViewPanel
     * @param VitalSignsHistory
     */
    public ViewPanel(VitalSignsHistory VitalSignsHistory) {
        initComponents();
        this.VitalSignsHistory =VitalSignsHistory;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnView = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabvitals = new javax.swing.JTable();
        labtemp = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        labbloodpressure = new javax.swing.JLabel();
        txtBloodPressure = new javax.swing.JTextField();
        labpluse = new javax.swing.JLabel();
        txtpluse = new javax.swing.JTextField();
        labdate = new javax.swing.JLabel();
        txtdate = new javax.swing.JTextField();

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        label.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label.setText("Vital View Signs");

        tabvitals.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Temperature", "Blood Pressure", "Pluse"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabvitals);

        labtemp.setText("Temperature");

        labbloodpressure.setText("Blood Pressure");

        labpluse.setText("Pulse");

        labdate.setText("Date");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labpluse)
                                .addGap(18, 18, 18)
                                .addComponent(txtpluse, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(labbloodpressure)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(labtemp)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labdate)
                                .addGap(18, 18, 18)
                                .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(201, 201, 201))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnView)
                .addGap(47, 47, 47)
                .addComponent(btndelete)
                .addGap(81, 81, 81))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {labbloodpressure, labdate, labpluse, labtemp, txtBloodPressure, txtTemperature, txtdate, txtpluse});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btndelete))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labtemp)
                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labbloodpressure)
                    .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labpluse)
                    .addComponent(txtpluse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labdate)
                    .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedindex = tabvitals.getSelectedRow();
        if(selectedindex < 0) {
            JOptionPane.showMessageDialog(this, "please select the row first", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tabvitals.getModel();
        //String vitalSigns  = (String) model.getValueAt(selectedindex, 0);
        VitalSigns selectedvitals = (VitalSigns) model.getValueAt(selectedindex, 0);
        
        
        if (selectedvitals != null){
            txtTemperature.setText(Double.toString(selectedvitals.getTemperature()));
            txtBloodPressure.setText(Double.toString(selectedvitals.getBloodPressure()));
            txtpluse.setText(Integer.toString(selectedvitals.getPulse()));
            txtdate.setText(selectedvitals.getDate());
        }
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        int selectedindex = tabvitals.getSelectedRow();
        if(selectedindex <0) {
            JOptionPane.showMessageDialog(this, "please select the row first", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tabvitals.getModel();
        VitalSigns selectedvitals = (VitalSigns) model.getValueAt(selectedindex, 0);
        
        populateTable();
        if (selectedvitals != null){
            VitalSignsHistory.removevitalsigns(selectedvitals);
        }
        
    }//GEN-LAST:event_btndeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnView;
    private javax.swing.JButton btndelete;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labbloodpressure;
    private javax.swing.JLabel labdate;
    private javax.swing.JLabel label;
    private javax.swing.JLabel labpluse;
    private javax.swing.JLabel labtemp;
    private javax.swing.JTable tabvitals;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtTemperature;
    private javax.swing.JTextField txtdate;
    private javax.swing.JTextField txtpluse;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tabvitals.getModel();
        model.setRowCount(0);
        
        for (VitalSigns vs : VitalSignsHistory.gethistory()){
            
            //System.out.println(vs.getDate());
        
            Object[] row = new Object[4];
            row[0] = vs;
            row[1] = vs.getTemperature();
            row[2]= vs.getBloodPressure();
            row[3]= vs.getPulse();
            
            model.addRow(row);
            
            
        
        
    }
}
}